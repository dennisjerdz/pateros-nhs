@ModelType ApplicationUser
@Code
    ViewBag.Title = "Summary Results"
End Code

<div class="container body-header">
    <div class="row">
        <div class="col-md-9">
            <p>
                @Model.FirstName / @ViewBag.Title 
                <a class="header-btn btn btn-default" href="@Url.Action("Students")"><span class="glyphicon glyphicon-chevron-left"></span>Back</a>
            </p>
        </div>
    </div>
</div>

<div class="container body-data">
    <div class="row">
        <div class="col-md-6 col-md-offset-3">
            @Code
                Dim aa As ExamStudent = Model.ExamStudents.Where(Function(a) a.Exam.Name.Contains("Aptitudes Assessment") And a.TakenAt IsNot Nothing).OrderByDescending(Function(a) a.TakenAt).FirstOrDefault()

                Dim aptitudesList As List(Of String) = New List(Of String)
            End Code

            @If aa IsNot Nothing Then
                @<text>
                    <h1>@aa.Exam.Name , @aa.AvailabilityStart - @aa.AvailabilityEnd</h1>
                </text>


                For Each a In aa.Exam.ExamQuestionGroups
                    For Each q As QuestionTFList In a.QuestionGroup.QuestionTFLists
                        Dim answer As ExamStudentTFList = q.ExamStudentTFLists.FirstOrDefault(Function(s) s.ExamStudentId = aa.ExamStudentId)

                        If answer.Answer = True Then
                            aptitudesList.Add(q.Question)
                        End If
                    Next
                Next
            End If

            @For Each item In aptitudesList
                @<text>
                    <h5>@item</h5>
                </text>
            Next
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <table class="table">
                <thead>
                    <tr>
                        <th colspan="2">Summary Results</th>
                    </tr>
                    <tr>
                        <th>My Problem Checklist</th>
                        <th>Needs Inventory</th>
                    </tr>
                </thead>

                <tbody>
                    <tr>
                        <td>
                            <table class="table">
                                <tbody>
                                    @Code
                                        Dim mp As ExamStudent = Model.ExamStudents.Where(Function(a) a.Exam.Name.Contains("My Problem Checklist") And a.TakenAt IsNot Nothing).OrderByDescending(Function(a) a.TakenAt).FirstOrDefault()
                                    End Code

                                    @If mp IsNot Nothing Then
                                        Dim myProblemPercentageTotal As Integer = 0
                                        Dim myProblemQuestionGroupTotal As Integer = 0

                                        For Each a In mp.Exam.ExamQuestionGroups
                                            If (a.QuestionGroup.DisplayName.Contains("About")) Then
                                                Dim questionTotal As Integer = a.QuestionGroup.QuestionTFRanks.Count()
                                                Dim trueTotal As Integer = 0

                                                For Each q As QuestionTFRank In a.QuestionGroup.QuestionTFRanks
                                                    Dim answer As ExamStudentTFRank = q.ExamStudentTFRanks.FirstOrDefault(Function(s) s.ExamStudentId = mp.ExamStudentId)

                                                    If answer.Answer = True Then
                                                        trueTotal += 1
                                                    End If
                                                Next

                                                Dim percentage As Double = Math.Round(((trueTotal / questionTotal) * 100), 2)

                                                myProblemPercentageTotal += percentage
                                                myProblemQuestionGroupTotal += 1

                                                @<text>
                                                    <tr>
                                                        <td>@a.QuestionGroup.DisplayName</td>
                                                        <td>@percentage %</td>
                                                    </tr>
                                                </text>
                                            End If
                                        Next

                                        Dim average As Double = Math.Round((myProblemPercentageTotal / myProblemQuestionGroupTotal), 2)

                                        @<text>
                                            <tr>
                                                <td>Average TOTAL</td>
                                                <td>@average %</td>
                                            </tr>
                                        </text>
                                    End If
                                </tbody>
                            </table>
                        </td>

                        <td>
                            <table class="table">
                                <tbody>
                                    <tr>
                                        <td>A1</td>
                                        <td>A1</td>
                                    </tr>
                                    <tr>
                                        <td>B1</td>
                                        <td>B1</td>
                                    </tr>
                                </tbody>
                            </table>
                        </td>
                    </tr>
                </tbody>

                <thead>
                    <tr>
                        <th>Personality-Work Orientation</th>
                        <th>Interest Inventory</th>
                    </tr>
                </thead>

                <tbody>
                    <tr>
                        <td>
                            <table class="table">
                                <tbody>
                                    <tr>
                                        <td>A1</td>
                                        <td>A1</td>
                                    </tr>
                                    <tr>
                                        <td>B1</td>
                                        <td>B1</td>
                                    </tr>
                                </tbody>
                            </table>
                        </td>

                        <td>
                            <table class="table">
                                <tbody>
                                    <tr>
                                        <td>A1</td>
                                        <td>A1</td>
                                    </tr>
                                    <tr>
                                        <td>B1</td>
                                        <td>B1</td>
                                    </tr>
                                </tbody>
                            </table>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <div Class="row">
        <div Class="col-md-3">
            @Code
                Dim mp As ExamStudent = Model.ExamStudents.Where(Function(a) a.Exam.Name.Contains("My Problem Checklist") And a.TakenAt IsNot Nothing).OrderByDescending(Function(a) a.TakenAt).FirstOrDefault()
            End Code

            @If mp IsNot Nothing Then
                @<text>
                    <h1>@mp.Exam.Name , @mp.AvailabilityStart - @mp.AvailabilityEnd</h1>
                </text>

                Dim myProblemPercentageTotal As Integer = 0
                Dim myProblemQuestionGroupTotal As Integer = 0

                For Each a In mp.Exam.ExamQuestionGroups
                    If (a.QuestionGroup.DisplayName.Contains("About")) Then
                        Dim questionTotal As Integer = a.QuestionGroup.QuestionTFRanks.Count()
                        Dim trueTotal As Integer = 0

                        For Each q As QuestionTFRank In a.QuestionGroup.QuestionTFRanks
                            Dim answer As ExamStudentTFRank = q.ExamStudentTFRanks.FirstOrDefault(Function(s) s.ExamStudentId = mp.ExamStudentId)

                            If answer.Answer = True Then
                                trueTotal += 1
                            End If
                        Next

                        Dim percentage As Double = Math.Round(((trueTotal / questionTotal) * 100), 2)

                        myProblemPercentageTotal += percentage
                        myProblemQuestionGroupTotal += 1

                        @<text>
                            <h1>@trueTotal / @questionTotal , @percentage</h1>
                        </text>
                    End If
                Next

                Dim average As Double = Math.Round((myProblemPercentageTotal / myProblemQuestionGroupTotal), 2)

                @<text>
                    <h1>@average %</h1>
                </text>
            End If
        </div>

        <div class="col-md-3">
            @Code
                Dim ni As ExamStudent = Model.ExamStudents.Where(Function(a) a.Exam.Name.Contains("Needs Inventory") And a.TakenAt IsNot Nothing).OrderByDescending(Function(a) a.TakenAt).FirstOrDefault()
            End Code

            @If ni IsNot Nothing Then
                @<text>
                    <h1>@ni.Exam.Name , @ni.AvailabilityStart - @ni.AvailabilityEnd</h1>
                </text>

                Dim needsInventoryPercentageTotal As Integer = 0
                Dim needsInventoryQuestionGroupTotal As Integer = 0

                For Each a In ni.Exam.ExamQuestionGroups
                    Dim questionTotal As Integer = a.QuestionGroup.QuestionTFRanks.Count()
                    Dim trueTotal As Integer = 0

                    For Each q As QuestionTFRank In a.QuestionGroup.QuestionTFRanks
                        Dim answer As ExamStudentTFRank = q.ExamStudentTFRanks.FirstOrDefault(Function(s) s.ExamStudentId = ni.ExamStudentId)

                        If answer.Answer = True Then
                            trueTotal += 1
                        End If
                    Next

                    Dim percentage As Double = Math.Round(((trueTotal / questionTotal) * 100), 2)

                    needsInventoryPercentageTotal += percentage
                    needsInventoryQuestionGroupTotal += 1

                        @<text>
                            <h1>@trueTotal / @questionTotal , @percentage</h1>
                        </text>
                Next

                Dim average As Double = Math.Round((needsInventoryPercentageTotal / needsInventoryQuestionGroupTotal), 2)

                @<text>
                    <h1>@average %</h1>
                </text>
            End If
        </div>

        <div class="col-md-3">
            @Code
                Dim pw As ExamStudent = Model.ExamStudents.Where(Function(a) a.Exam.Name.Contains("Personality-Work Orientation Profile") And a.TakenAt IsNot Nothing).OrderByDescending(Function(a) a.TakenAt).FirstOrDefault()
            End Code

            @If pw IsNot Nothing Then
                @<text>
                    <h1>@pw.Exam.Name , @pw.AvailabilityStart - @pw.AvailabilityEnd</h1>
                </text>

                Dim personalityWorkPercentageTotal As Integer = 0
                Dim personalityWorkQuestionGroupTotal As Integer = 0

                For Each a In pw.Exam.ExamQuestionGroups
                    Dim questionTotal As Integer = a.QuestionGroup.QuestionTFRanks.Count()
                    Dim trueTotal As Integer = 0

                    For Each q As QuestionTFRank In a.QuestionGroup.QuestionTFRanks
                        Dim answer As ExamStudentTFRank = q.ExamStudentTFRanks.FirstOrDefault(Function(s) s.ExamStudentId = pw.ExamStudentId)

                        If answer.Answer = True Then
                            trueTotal += 1
                        End If
                    Next

                    Dim percentage As Double = Math.Round(((trueTotal / questionTotal) * 100), 2)

                    personalityWorkPercentageTotal += percentage
                    personalityWorkQuestionGroupTotal += 1

                    @<text>
                        <h1>@trueTotal / @questionTotal , @percentage</h1>
                    </text>
                Next

                Dim average As Double = Math.Round((personalityWorkPercentageTotal / personalityWorkQuestionGroupTotal), 2)

                @<text>
                    <h1>@average %</h1>
                </text>
            End If
        </div>

        <div class="col-md-3">
            @Code
                Dim ii As ExamStudent = Model.ExamStudents.Where(Function(a) a.Exam.Name.Contains("Interest Inventory") And a.TakenAt IsNot Nothing).OrderByDescending(Function(a) a.TakenAt).FirstOrDefault()
            End Code

            @If ii IsNot Nothing Then
                @<text>
                    <h1>@ii.Exam.Name , @ii.AvailabilityStart - @ii.AvailabilityEnd</h1>
                </text>

                Dim interestInventoryPercentageTotal As Integer = 0
                Dim interestInventoryQuestionGroupTotal As Integer = 0

                For Each a In ii.Exam.ExamQuestionGroups
                    Dim questionTotal As Integer = a.QuestionGroup.QuestionTFRanks.Count()
                    Dim trueTotal As Integer = 0

                    For Each q As QuestionTFRank In a.QuestionGroup.QuestionTFRanks
                        Dim answer As ExamStudentTFRank = q.ExamStudentTFRanks.FirstOrDefault(Function(s) s.ExamStudentId = ii.ExamStudentId)

                        If answer.Answer = True Then
                            trueTotal += 1
                        End If
                    Next

                    Dim percentage As Double = Math.Round(((trueTotal / questionTotal) * 100), 2)

                    interestInventoryPercentageTotal += percentage
                    interestInventoryQuestionGroupTotal += 1

                    @<text>
                        <h1>@trueTotal / @questionTotal , @percentage</h1>
                    </text>
                Next

                Dim average As Double = Math.Round((interestInventoryPercentageTotal / interestInventoryQuestionGroupTotal), 2)

                @<text>
                    <h1>@average %</h1>
                </text>
            End If
        </div>

        <table></table>
    </div>
</div>

@section Scripts
    @Scripts.Render("~/bundles/jqueryval")
End Section
